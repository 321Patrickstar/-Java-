package javastudylast;
/*
* 为啥要使用static，我们创建类的时候需要对象实例化才能初始化所有属性或者调用方法
* （如果一个中国人人的类里面所有的人国籍一定是中国，没必要在属性重写，而是分配特定的内存
* 来存储）
* 能修饰可以来修饰属性，方法，代码块，内部类
* 3static修饰属性
* 属性分为静态属性和非静态属性（实例变量），每个对象有的非静态属性（实例变量）是独立的，修改一个不会改变其他对象
* 静态属性每个对象有的公共静态变量，修改一个其他的都变
* 静态变量加载要早于对象的创建，随着类的加载而加载，所以可以直接用类.来掉用
* 由于类只会加载一次，静态变量也只会加载一次，在内存中只存在一份，且在方法区的静态域内
* 类和对象都能调用类变量，对象调用类变量，类不能
* 类和对象都能调用类方法，对象调用类方法，类不能
* 静态方法只能调用静态的属性或者方法（非静态的生命周期不够，不够早）（对于静态省略的是类.
* 非静态的方法中既可以调用非静态的属性和方法，也能调用静态的属性和方法
* 非静态是伴随着对象的，静态是伴随着类的
* 1.在开发中如何确定一个属性是否要是static
* 不会随着对象的不同而不同，属性可以被对象所共享的
* 2.在开发中如何确定一个方法是否要是static
* 操作静态属性的方法，通常设置为static
* 工具类中的方法，习惯上声明为static的，比如；Math，Arrays，Collections
*在C++中可以调用main方法，数据都是正在栈区域，所以不用区造对象，但是我们的Java的main函数是静态的
* 它也只能调用静态方法，所以我们得造对象，通过对象来调用，C++也是如此，栈区域的main函数要想调用引用类的类内的方法
* 变量只是个地址指向堆区域数据这里和java一样
* main方法也可以作为作为与控制台交互的方式
* 3代码块
*
* */
public class StaticTest {
    public static void main(String[] args) {
        Static1.nation = "chinese";

    }
}